name: ffmpeg-all

on:
  workflow_dispatch:
    # manual trigger

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TIMESTAMP: ${{ github.run_id }}_${{ github.run_number }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set file permissions
        run: |
          chmod +x configs/ffmpeg-for-lambda/build.sh
          chmod +x configs/ffmpeg-for-lambda/amd64/build.sh
          chmod +x configs/ffmpeg-for-lambda/arm64/build.sh

      - name: Build FFmpeg for all architectures
        run: |
          cd configs/ffmpeg-for-lambda/
          ./build.sh --timestamp ${TIMESTAMP}

      - name: List artifact directories
        run: |
          echo "Checking for build artifacts..."
          echo "Working directory: $(pwd)"
          ls -la configs/ffmpeg-for-lambda/build/ || echo "configs/ffmpeg-for-lambda/build/ directory not found"
          ls -la configs/ffmpeg-for-lambda/build/archive/ || echo "configs/ffmpeg-for-lambda/build/archive/ directory not found"
          ls -la configs/ffmpeg-for-lambda/build/archive/$TIMESTAMP/ || echo "configs/ffmpeg-for-lambda/build/archive/$TIMESTAMP/ directory not found"
          find configs/ffmpeg-for-lambda/ -name "*.zip" -type f

      - name: Create build summary
        run: |
          if [ -d "configs/ffmpeg-for-lambda/build/${TIMESTAMP}" ]; then
            echo "Creating build summary..."
            cat > "configs/ffmpeg-for-lambda/build/${TIMESTAMP}/summary.txt" << EOF
            FFmpeg Build Summary
            ===================
            Build ID: ${TIMESTAMP}
            Date: $(date)

            This build includes:
            - AMD64 binaries for Amazon Lambda
            - ARM64 binaries for Amazon Lambda

            Archives:
            - build/archive/${TIMESTAMP}/ffmpeg-amd64_${TIMESTAMP}.zip
            - build/archive/${TIMESTAMP}/ffmpeg-arm64_${TIMESTAMP}.zip
            - build/archive/${TIMESTAMP}/ffmpeg-combined_${TIMESTAMP}.zip

            EOF

            # Copy the summary to the archive directory
            mkdir -p "configs/ffmpeg-for-lambda/build/archive/${TIMESTAMP}/"
            cp "configs/ffmpeg-for-lambda/build/${TIMESTAMP}/summary.txt" "configs/ffmpeg-for-lambda/build/archive/${TIMESTAMP}/"

            # Create a latest.txt file with the current build timestamp
            echo "${TIMESTAMP}" > "configs/ffmpeg-for-lambda/build/latest.txt"
          else
            echo "configs/ffmpeg-for-lambda/build/${TIMESTAMP} directory doesn't exist, skipping summary creation"
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-combined-build
          path: configs/ffmpeg-for-lambda/build/archive/${{ env.TIMESTAMP }}
          retention-days: 7
          if-no-files-found: warn
