FROM public.ecr.aws/lambda/provided:al2023-x86_64

# Install dependencies
RUN dnf update -y && \
  dnf install -y \
  autoconf \
  automake \
  bzip2 \
  bzip2-devel \
  cmake \
  freetype-devel \
  gcc \
  gcc-c++ \
  git \
  libtool \
  make \
  pkgconfig \
  zlib-devel \
  tar \
  gzip

# Set up build directories
WORKDIR /ffmpeg_build
ENV HOME="/ffmpeg_build" \
  PATH="/ffmpeg_build/bin:${PATH}" \
  PKG_CONFIG_PATH="/ffmpeg_build/lib/pkgconfig"

# Install NASM
RUN mkdir -p /ffmpeg_sources && \
  cd /ffmpeg_sources && \
  curl -O -L https://www.nasm.us/pub/nasm/releasebuilds/2.15.05/nasm-2.15.05.tar.bz2 && \
  tar xjf nasm-2.15.05.tar.bz2 && \
  cd nasm-2.15.05 && \
  ./autogen.sh && \
  ./configure --prefix="/ffmpeg_build" --bindir="/ffmpeg_build/bin" && \
  make -j$(nproc) && \
  make install

# Install YASM
RUN cd /ffmpeg_sources && \
  curl -O -L https://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz && \
  tar xzvf yasm-1.3.0.tar.gz && \
  cd yasm-1.3.0 && \
  ./configure --prefix="/ffmpeg_build" --bindir="/ffmpeg_build/bin" && \
  make -j$(nproc) && \
  make install

# Install fdk-aac
RUN cd /ffmpeg_sources && \
  git clone --depth 1 https://github.com/mstorsjo/fdk-aac.git && \
  cd fdk-aac && \
  autoreconf -fiv && \
  ./configure --prefix="/ffmpeg_build" --disable-shared && \
  make -j$(nproc) && \
  make install

# Install libmp3lame
RUN cd /ffmpeg_sources && \
  curl -O -L https://downloads.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz && \
  tar xzvf lame-3.100.tar.gz && \
  cd lame-3.100 && \
  ./configure --prefix="/ffmpeg_build" --bindir="/ffmpeg_build/bin" --disable-shared --enable-nasm && \
  make -j$(nproc) && \
  make install

# Install libopus
RUN cd /ffmpeg_sources && \
  curl -O -L https://archive.mozilla.org/pub/opus/opus-1.3.1.tar.gz && \
  tar xzvf opus-1.3.1.tar.gz && \
  cd opus-1.3.1 && \
  ./configure --prefix="/ffmpeg_build" --disable-shared && \
  make -j$(nproc) && \
  make install

# Create FFmpeg version script
RUN echo '#!/bin/sh\n\
  if [ -f "/ffmpeg_build/bin/ffmpeg" ]; then\n\
  /ffmpeg_build/bin/ffmpeg -version | head -n 1 | cut -d" " -f3\n\
  else\n\
  echo "ffmpeg-snapshot"\n\
  fi' > /ffmpeg_sources/ffmpeg_version.sh && \
  chmod +x /ffmpeg_sources/ffmpeg_version.sh

# Build FFmpeg
RUN cd /ffmpeg_sources && \
  curl -O -L https://ffmpeg.org/releases/ffmpeg-snapshot.tar.bz2 && \
  tar xjf ffmpeg-snapshot.tar.bz2 && \
  cd ffmpeg && \
  ./configure \
  --prefix="/ffmpeg_build" \
  --pkg-config-flags="--static" \
  --extra-cflags="-I/ffmpeg_build/include" \
  --extra-ldflags="-L/ffmpeg_build/lib" \
  --extra-libs="-lpthread -lm" \
  --bindir="/ffmpeg_build/bin" \
  --enable-gpl \
  --enable-libfdk_aac \
  --enable-libmp3lame \
  --enable-libopus \
  --enable-nonfree \
  --disable-debug \
  --disable-doc \
  --disable-ffplay \
  --disable-network \
  --disable-hwaccels \
  --disable-filters \
  --enable-filter=aresample \
  --enable-filter=atempo \
  --enable-filter=format \
  --enable-filter=silencedetect \
  --enable-filter=volume \
  --disable-muxers \
  --enable-muxer=mp3 \
  --enable-muxer=aac \
  --enable-muxer=wav \
  --disable-encoders \
  --enable-encoder=libmp3lame \
  --enable-encoder=libfdk_aac \
  --enable-encoder=aac \
  --disable-indevs \
  --disable-outdevs \
  --disable-protocols \
  --enable-protocol=file \
  --disable-demuxers \
  --enable-demuxer=aac \
  --enable-demuxer=mp3 \
  --enable-demuxer=mov \
  --enable-demuxer=mp4 \
  --enable-demuxer=matroska \
  --enable-demuxer=wav \
  --disable-bsfs \
  --enable-bsf=aac_adtstoasc \
  --enable-bsf=extract_extradata \
  --disable-decoders \
  --enable-decoder=aac \
  --enable-decoder=mp3 \
  --enable-decoder=opus \
  --enable-decoder=flac \
  --enable-decoder=pcm_* \
  --enable-decoder=vorbis \
  --enable-decoder=wavpack \
  --enable-small \
  --disable-x86asm \
  --disable-inline-asm \
  --arch=x86_64 && \
  make -j$(nproc) && \
  make install && \
  cp ../ffmpeg_version.sh . && \
  strip /ffmpeg_build/bin/ffmpeg && \
  strip /ffmpeg_build/bin/ffprobe

# Show binary sizes
RUN ls -lh /ffmpeg_build/bin/ffmpeg /ffmpeg_build/bin/ffprobe

# Default command
CMD ["echo", "FFmpeg build complete. Extract the binaries with docker cp."]
